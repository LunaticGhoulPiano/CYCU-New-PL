8
(define define 3)
(define exit 3)
(lambda (define a 3))
(let ((cons car)) (cons '(1 2)))
(set! ((cons car)) (cons '(1 2)) (lambda (cons 1 2)))
(cond (define a (eqv? 1 3)))
(cond (define 1 (eqv? 1 3)))
(cond (cond (cons (list (eqv? 1 3) 3 68 "" (+ 3 4)))))
(exit)