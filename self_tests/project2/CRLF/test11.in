11
'(3 4 5)
(quote (3 (4 5)))
(list 3 '(4 5) 6 '(7 8))
((cons 1 2) (list 1 2 3))
(((cons 1 2)))
((list '"quote" () (cons 1 2) 345 ()) (456))
(define (main a b c) (eqv? (+ a b c) (- a b c)))
((define a 3))
(((just_a_atom) test a))
(cdr '((3 4) . "Merry Christmas!")  )
(((cons 1 2) (((list 2 3 4 (cons 1 2)))) (eqv? #t (not #f))))
(define a
  (list (cons 1 2)
        (list
          (list
            (list 2 3 4 (cons 1 2))
          )
        )
        (eqv? #t (not #f))
  )
)
(lambda #f (exit))
(define lambda_exit (lambda #f (exit)))
( ( lambda () (+ 5 5) (+ 5 6) 
       )
     )
(define (Factorial n)
  (cond ( (not (integer? n)) 
          ( create-error-object "Error! parameter not an integer." )
        )
        ( (< n 0) 
          ( create-error-object "Error! parameter less than 0." )
        )
        ( #t
          ( if (= n 0)
             1
             (* n (Factorial (- n 1)))
          )
        )
  )
)
    (exit)